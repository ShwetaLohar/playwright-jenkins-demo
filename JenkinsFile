// pipeline {
//     agent any
//     stages {
//         stage('Test') {
//             steps {
//                 sh 'npx playwright test --reporter=html'
//             }
//         }
//         stage('Publish Report') {
//             steps {
//                 publishHTML(target: [
//                     reportName: 'Playwright Test Report',
//                     reportDir: 'playwright-report', // Directory containing the report
//                     reportFiles: 'index.html',     // Entry HTML file
//                     keepAll: true,
//                     allowMissing: false,
//                     alwaysLinkToLastBuild: true
//                 ])
//             }
//         }
//     }
// }

// pipeline {
//    agent { 
//     docker { 
//       image 'mcr.microsoft.com/playwright:v1.49.1-noble'
//       }
//     }
        
//    stages {
//       stage('install playwright') {
//          steps {
//             sh '''
//             npm i -D @playwright/test
//             '''
//          }
//       }

//       stage('help') {
//          steps {
//             sh 'npx playwright test --help'
//          }
//       }
      
//       stage('test'){
//         steps {
//             sh '''
//             xvfb-run npx playwright test --list
//             xvfb-run npx playwright test "tests/login.spec.ts --reporter=html"
//             '''
//         }
//       }

//       stage('Publish Report') {
//             steps {
//                 publishHTML(target: [
//                     reportName: 'Playwright Test Report',
//                     reportDir: 'playwright-report', 
//                     reportFiles: 'index.html',     
//                     keepAll: true,
//                     allowMissing: false,
//                     alwaysLinkToLastBuild: true
//                 ])
//             }
//       }

//     stage('Archive Test Videos') {
//       steps {
//             archiveArtifacts artifacts: 'myVideos/**/*.webm', fingerprint: true
//       }
//    }
// }

//    post {
//       always {
//          archiveArtifacts artifacts: 'playwright-report/**', fingerprint: true
//       }
//    }
// }



// pipeline {
//     agent { 
//         docker { 
//             image 'mcr.microsoft.com/playwright:v1.49.1-noble'
//             args '-e TZ=Asia/Kolkata'
//         }
//     }
        
//     stages {

//        stage('Cleanup Old Videos') {
//             steps {
//                 sh 'rm -rf myVideos/*'
//             }
//         }

//         stage('Install Playwright') {
//             steps {
//                 sh '''
//                 npm i -D @playwright/test
//                 '''
//             }
//         }

//         stage('Help') {
//             steps {
//                 sh 'npx playwright test --help'
//             }
//         }
        
//         stage('Test') {
//             steps {
//                 sh '''
//                 xvfb-run npx playwright test --list
//                 xvfb-run npx playwright test "tests/login.spec.ts" --reporter=html
//                 '''
//             }
//         }

//         stage('Archive Test Videos') {
//             steps {
//                 archiveArtifacts artifacts: 'myVideos/**/*.webm', fingerprint: true
//             }
//         }

//         stage('Publish Report') {
//             steps {
//                 publishHTML(target: [
//                     reportName: 'Playwright Test Report',
//                     reportDir: 'playwright-report', 
//                     reportFiles: 'index.html',     
//                     keepAll: true,
//                     allowMissing: false,
//                     alwaysLinkToLastBuild: true
//                 ])
//             }
//         }
//     }

//     post {  
//         always {
//             archiveArtifacts artifacts: 'playwright-report/**', fingerprint: true
//         }
//     }
// }


// pipeline {
//     agent {
//         docker { 
//             // image 'mcr.microsoft.com/playwright:v1.49.1-noble'
//             image 'playwright-with-ffmpeg'
//             args '-e TZ=Asia/Kolkata'
//         }
//     }

//     environment {
//         VIDEO_DIR = 'myVideos/'
//     }

//     stages {
//         stage('Install Dependencies') {
//             steps {
//                 sh 'npm install'
//             }
//         }

//         stage('Run Playwright Tests') {
//             steps {
//                 script {
//                     sh "rm -rf ${VIDEO_DIR} && mkdir -p ${VIDEO_DIR}"
//                     sh "xvfb-run --auto-servernum npx playwright test --reporter=html"
//                 }
//             }
//         }

//         stage('Verify Videos') {
//             steps {
//                 script {
//                     sh "ls -l ${VIDEO_DIR}"

//                     sh '''
//                     for video in ${VIDEO_DIR}*.webm; do
//                         if [ -f "$video" ]; then
//                             ffmpeg -i "$video" -c:v libvpx -crf 10 -b:v 1M "$video.fixed.webm"
//                             mv "$video.fixed.webm" "$video"
//                         fi
//                     done
//                     '''
//                 }
//             }
//         }

//         stage('Publish Test Report') {
//             steps {
//                 publishHTML(target: [
//                     reportName: 'Playwright Test Report',
//                     reportDir: 'playwright-report',
//                     reportFiles: 'index.html',
//                     keepAll: true,
//                     allowMissing: false,
//                     alwaysLinkToLastBuild: true
//                 ])
//             }
//         }

//         stage('Archive Test Videos') {
//             steps {
//                 archiveArtifacts artifacts: "${VIDEO_DIR}*.webm", fingerprint: true
//             }
//         }
//     }

//     post {
//         always {
//             // Ensure videos and reports are archived even if the build fails
//             archiveArtifacts artifacts: 'playwright-report/**', fingerprint: true
//             archiveArtifacts artifacts: "${VIDEO_DIR}*.webm", fingerprint: true
//         }
//     }
// }


pipeline {
    agent {
        docker { 
            image 'mcr.microsoft.com/playwright:v1.49.1-noble'
            // image 'playwright-with-ffmpeg'
            args '-e TZ=Asia/Kolkata'
        }
    }

    environment {
        VIDEO_DIR = 'myVideos/'
    }

    stages {
        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }

        stage('Run Playwright Tests') {
            steps {
                script {
                    sh "rm -rf ${VIDEO_DIR} && mkdir -p ${VIDEO_DIR}"
                    sh "xvfb-run --auto-servernum npx playwright test --reporter=html"
                }
            }
        }

      //   stage('Verify Videos') {
      //       steps {
      //           script {
      //               sh "ls -l ${VIDEO_DIR}"

      //               sh '''
      //               for video in ${VIDEO_DIR}*.webm; do
      //                   if [ -f "$video" ]; then
      //                       ffmpeg -i "$video" -c:v libvpx -crf 10 -b:v 1M "$video.fixed.webm"
      //                       mv "$video.fixed.webm" "$video"
      //                   fi
      //               done
      //               '''
      //           }
      //       }
      //   }

        stage('Publish Test Report') {
            steps {
                publishHTML(target: [
                    reportName: 'Playwright Test Report',
                    reportDir: 'playwright-report',
                    reportFiles: 'index.html',
                    keepAll: true,
                    allowMissing: false,
                    alwaysLinkToLastBuild: true
                ])
            }
        }

        stage('Archive Test Videos') {
            steps {
                archiveArtifacts artifacts: "${VIDEO_DIR}*.webm", fingerprint: true
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: 'playwright-report/**', fingerprint: true
            archiveArtifacts artifacts: "${VIDEO_DIR}*.webm", fingerprint: true
        }
    }
}

